version: '3.4'

services:
  website:
    container_name: website.mg-dashboard
    image: node:19-alpine
    depends_on:
      - api

    working_dir: /home/website
    ports:
      - 80:80
    volumes:
      - ./website/frontend/mg-dashboard:/home/website
    command: sh -c 'npm install && npm run start'
    restart: always

  api:
    container_name: api.mg-dashboard
    image: mcr.microsoft.com/dotnet/sdk:6.0
    depends_on:
      - database

    working_dir: /home/api
    env_file:
      - ./api/MG.Dashboard.Api/.env
    volumes:
      - ./api:/home/api/build
    ports:
      - '5000:5000'
    environment:
      ASPNETCORE_URLS: http://+:5000 
    command: bash -c 'dotnet publish build/MG.Dashboard.Api/MG.Dashboard.Api.csproj -c Release -o app && dotnet app/MG.Dashboard.Api.dll'
    restart: always

  mqtt:
    container_name: mqtt.mg-dashboard
    image: mcr.microsoft.com/dotnet/sdk:6.0

    working_dir: /home/mqtt
    env_file:
      - ./mqtt-server/MG.Dashboard.Mqtt.Server/.env
    volumes:
      - ./mqtt-server:/home/mqtt/build
    ports:
      - '1883:1883'
    command: bash -c 'dotnet publish build/MG.Dashboard.Mqtt.Server/MG.Dashboard.Mqtt.Server.csproj -c Release -o app && dotnet app/MG.Dashboard.Mqtt.Server.dll'
    restart: always

  database:
    container_name: db.mg-dashboard
    image: postgres

    working_dir: /home/db
    env_file:
      - ./db/.env
    volumes:
      - ./db/data:/var/lib/db/data
    ports:
      - '5432:5432'
    restart: always

  dbadmin:
    container_name: dbadmin.mg-dashboard
    image: dpage/pgadmin4:latest
    depends_on:
      - database

    env_file:
      - ./db/.env
    ports:
      - '5050:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: always

volumes:
    pgadmin-data:  