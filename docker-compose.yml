version: '3.5'

networks:
  mg-network:
    external: true
    name: mg-network

services:
  website:
    container_name: website.mg-dashboard
    build:
      context: ./website/frontend/mg-dashboard
      dockerfile: Dockerfile

    ports:
      - 80:80
    networks:
      - mg-network
    
    restart: always

  api:
    container_name: api.mg-dashboard
    image: mcr.microsoft.com/dotnet/sdk:6.0
    depends_on:
      - database

    working_dir: /home/api
    env_file:
      - ./api/MG.Dashboard.Api/.env
    volumes:
      - ./api:/home/api/build
      - '${USERPROFILE}/.aspnet/https:/https/'
    ports:
      - 8000:80
      - 8001:443
    networks:
      - mg-network
    command: bash -c 'dotnet publish build/MG.Dashboard.Api/MG.Dashboard.Api.csproj -c Release -o app && dotnet app/MG.Dashboard.Api.dll'
    restart: always

  mqtt:
    container_name: mqtt.mg-dashboard
    image: mcr.microsoft.com/dotnet/sdk:6.0

    working_dir: /home/mqtt
    env_file:
      - ./mqtt-server/MG.Dashboard.Mqtt.Server/.env
    volumes:
      - ./mqtt-server:/home/mqtt/build
    ports:
      - 1883:1883
      - 8083:8083
    networks:
      - mg-network
    command: bash -c 'dotnet publish build/MG.Dashboard.Mqtt.Server/MG.Dashboard.Mqtt.Server.csproj -c Release -o app && dotnet app/MG.Dashboard.Mqtt.Server.dll'
    restart: always

  database:
    container_name: db.mg-dashboard
    image: postgres

    working_dir: /home/db
    env_file:
      - ./db/.env
    volumes:
      - ./db/data/persist:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - mg-network
    restart: always

  dbadmin:
    container_name: dbadmin.mg-dashboard
    image: dpage/pgadmin4:latest
    depends_on:
      - database

    env_file:
      - ./db/.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - mg-network
    restart: always

volumes:
    pgadmin-data:  